\begin{Verbatim}[commandchars=\\\{\}]
\PYG{k}{def} \PYG{n+nf}{compute\PYGZus{}check\PYGZus{}digit}\PYG{p}{(}\PYG{n}{a\PYGZus{}number}\PYG{p}{):}
    \PYG{l+s+sd}{\PYGZdq{}\PYGZdq{}\PYGZdq{}}
\PYG{l+s+sd}{    Compute a check digit from a sequence of credit card number by employing Luhn algorithm	}

\PYG{l+s+sd}{    Parameters:}
\PYG{l+s+sd}{    \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s+sd}{    a\PYGZus{}number : int}
\PYG{l+s+sd}{        A credit card number. For example, 4690358213754657}

\PYG{l+s+sd}{    Returns:}
\PYG{l+s+sd}{    \PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}\PYGZhy{}}
\PYG{l+s+sd}{    check\PYGZus{}digit : int}
\PYG{l+s+sd}{        A digit between 0 dan 9 inclusively.}
\PYG{l+s+sd}{    \PYGZdq{}\PYGZdq{}\PYGZdq{}}
    \PYG{k}{pass}
\end{Verbatim}
